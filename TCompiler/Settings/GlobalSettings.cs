#region

using System.Collections.Generic;
using TCompiler.Types.CompilingTypes.ReturningCommand.Variable;

#endregion

namespace TCompiler.Settings
{
    public static class GlobalSettings
    {
        public static readonly List<string> InvalidNames = new List<string>
        {
            //"add",
            //"subb",
            //"inc",
            //"dec",
            //"mul",
            //"div",
            //"da",
            //"anl",
            //"orl",
            //"xrl",
            //"clr",
            //"cpl",
            //"mov",
            //"movc",
            //"movx",
            //"push",
            //"pop",
            //"xch",
            //"xchd",
            //"swap",
            //"nop",
            //"setb",
            //"rl",
            //"rlc",
            //"rr",
            //"rrc",
            //"call",
            //"ret",
            //"jmp",
            //"jz",
            //"jnz",
            //"jc",
            //"jnc",
            //"jb",
            //"jnb",
            //"jbc",
            //"cjne",
            //"djnz",
            //"data",
            //"bit",
            //"include",
            "int",
            "if",
            "endif",
            "bool",
            "while",
            "endwhile",
            "break",
            "block",
            "endblock",
            "fortil",
            "endfortil",
            "cint",
            "char",
            "return",
            "method",
            "endmethod",
            "sleep"
        };

        public static readonly List<Variable> StandardVariables = new List<Variable>
        {
            new Int(false, "080h", "p0"),
            new Int(false, "081h", "sp"),
            new Int(false, "082h", "dpl"),
            new Int(false, "083h", "dph"),
            new Int(false, "082h", "dp0l"),
            new Int(false, "083h", "dp0h"),
            new Int(false, "084h", "dp1l"),
            new Int(false, "085h", "dp1h"),
            new Int(false, "086h", "spdr"),
            new Int(false, "087h", "pcon"),
            new Int(false, "088h", "tcon"),
            new Int(false, "089h", "tmod"),
            new Int(false, "08Ah", "tl0"),
            new Int(false, "08Bh", "tl1"),
            new Int(false, "08Ch", "th0"),
            new Int(false, "08Dh", "th1"),
            new Int(false, "090h", "p1"),
            new Int(false, "096h", "wmcon"),
            new Int(false, "098h", "scon"),
            new Int(false, "099h", "sbuf"),
            new Int(false, "0A0h", "p2"),
            new Int(false, "0A8h", "ie"),
            new Int(false, "0AAh", "spsr"),
            new Int(false, "0B0h", "p3"),
            new Int(false, "0B8h", "ip"),
            new Int(false, "0C8h", "t2con"),
            new Int(false, "0C9h", "t2mod"),
            new Int(false, "0CAh", "rcap2l"),
            new Int(false, "0CCh", "rcap2h"),
            new Int(false, "0CCh", "tl2"),
            new Int(false, "0CDh", "th2"),
            new Int(false, "0D0h", "psw"),
            new Int(false, "0D5h", "spcr"),
            new Int(false, "0E0h", "acc"),
            new Int(false, "0F0h", "b"),
            new Int(false, "0E0h", "a"),
            new Bool(false, "0D0h.7", "CY"),
            new Bool(false, "0D0h.6", "AC"),
            new Bool(false, "0D0h.5", "F0"),
            new Bool(false, "0D0h.4", "RS1"),
            new Bool(false, "0D0h.3", "RS0"),
            new Bool(false, "0D0h.2", "OV"),
            new Bool(false, "0D0h.1", "F1"),
            new Bool(false, "0D0h.0", "P"),
            new Bool(false, "088h.7", "TF1"),
            new Bool(false, "088h.6", "TR1"),
            new Bool(false, "088h.5", "TF0"),
            new Bool(false, "088h.4", "TR0"),
            new Bool(false, "088h.3", "IE1"),
            new Bool(false, "088h.2", "IT1"),
            new Bool(false, "088h.1", "IE0"),
            new Bool(false, "088h.0", "IT0"),
            new Bool(false, "088h.7", "EA"),
            new Bool(false, "0A8h.5", "ET2"),
            new Bool(false, "0A8h.4", "ES"),
            new Bool(false, "0A8h.3", "ET1"),
            new Bool(false, "0A8h.2", "EX1"),
            new Bool(false, "0A8h.1", "ET0"),
            new Bool(false, "0A8h.0", "EX0"),
            new Bool(false, "0B8h.5", "PT2"),
            new Bool(false, "0B8h.4", "PS"),
            new Bool(false, "0B8h.3", "PT1"),
            new Bool(false, "0B8h.2", "PX1"),
            new Bool(false, "0B8h.1", "PT0"),
            new Bool(false, "0B8h.0", "PX0"),
            new Bool(false, "0B0h.7", "RD"),
            new Bool(false, "0B0h.6", "WR"),
            new Bool(false, "0B0h.5", "T1"),
            new Bool(false, "0B0h.4", "T0"),
            new Bool(false, "0B0h.3", "INT1"),
            new Bool(false, "0B0h.2", "INT0"),
            new Bool(false, "0B0h.1", "TXD"),
            new Bool(false, "0B0h.0", "RXD"),
            new Bool(false, "0C8h.7", "TF2"),
            new Bool(false, "0C8h.6", "EXF2"),
            new Bool(false, "0C8h.5", "RCLK"),
            new Bool(false, "0C8h.4", "TCLK"),
            new Bool(false, "0C8h.3", "EXEN2"),
            new Bool(false, "0C8h.2", "TR2"),
            new Bool(false, "0C8h.1", "C_T2"),
            new Bool(false, "0C8h.0", "CP_RL2"),
            new Bool(false, "098h.7", "SM0"),
            new Bool(false, "098h.6", "SM1"),
            new Bool(false, "098h.5", "SM2"),
            new Bool(false, "098h.4", "REN"),
            new Bool(false, "098h.3", "TB8"),
            new Bool(false, "098h.2", "RB8"),
            new Bool(false, "098h.1", "TI"),
            new Bool(false, "098h.0", "RI"),
            new Bool(false, "090h.7", "SCK"),
            new Bool(false, "090h.6", "MISO"),
            new Bool(false, "090h.5", "MOSI"),
            new Bool(false, "090h.4", "SS"),
            new Bool(false, "090h.1", "T2EX"),
            new Bool(false, "090h.0", "T2"),
            new Bool(false, "0D0h.7.", "c")
        };

        public static List<char> Splitters = new List<char>
        {
            ' ',
            ',',
            '.',
            ';',
            ':',
            '!',
            '?',
            '/',
            '\\',
            '&',
            '\"',
            '-',
            '_',
            '%',
            '(',
            ')',
            '{',
            '}',
            '[',
            ']',
            '=',
            '*',
            '^',
            '>',
            '<',
            '\n',
            '+',
            '|'
        };

        public static string InputPath { get; set; }
        public static string OutputPath { get; set; }
        public static string ErrorPath { get; set; }
    }
}